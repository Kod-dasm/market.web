{"remainingRequest":"/home/max/chat.web/node_modules/babel-loader/lib/index.js!/home/max/chat.web/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/max/chat.web/src/components/lib/ChatComponent/ChatComponent.js?vue&type=script&lang=js&","dependencies":[{"path":"/home/max/chat.web/src/components/lib/ChatComponent/ChatComponent.js","mtime":1574596146974},{"path":"/home/max/chat.web/node_modules/cache-loader/dist/cjs.js","mtime":1574256557022},{"path":"/home/max/chat.web/node_modules/babel-loader/lib/index.js","mtime":1574256514257},{"path":"/home/max/chat.web/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1573720234857}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/max/chat.web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapActions, mapState } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      text: ''\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    messages: function messages(state) {\n      return state.messages.list;\n    }\n  })),\n  methods: _objectSpread({}, mapActions({\n    sendMessage: 'messages/send'\n  }), {\n    noEnter: function noEnter(e) {\n      if (e.keyCode === 13 && !e.shiftKey) {\n        e.preventDefault();\n        this.handleSendClick();\n      }\n    },\n    handleSendClick: function handleSendClick() {\n      if (this.text) {\n        if (/\\S/.test(this.text)) {\n          this.sendMessage(this.text);\n          this.text = '';\n        }\n      }\n    }\n  }),\n  updated: function updated() {\n    var length = this.$refs.element.length;\n    this.$refs.element[length - 1].scrollIntoView(false);\n  }\n};",{"version":3,"sources":["/home/max/chat.web/src/components/lib/ChatComponent/ChatComponent.js"],"names":["mapActions","mapState","data","text","computed","messages","state","list","methods","sendMessage","noEnter","e","keyCode","shiftKey","preventDefault","handleSendClick","test","updated","length","$refs","element","scrollIntoView"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,MAArC;AAEA,eAAe;AACbC,EAAAA,IADa,kBACL;AACN,WAAO;AACLC,MAAAA,IAAI,EAAE;AADD,KAAP;AAGD,GALY;AAMbC,EAAAA,QAAQ,oBACHH,QAAQ,CAAC;AACVI,IAAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,aAAIA,KAAK,CAACD,QAAN,CAAeE,IAAnB;AAAA;AADL,GAAD,CADL,CANK;AAWbC,EAAAA,OAAO,oBACFR,UAAU,CAAC;AACZS,IAAAA,WAAW,EAAE;AADD,GAAD,CADR;AAILC,IAAAA,OAJK,mBAIIC,CAJJ,EAIO;AACV,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoB,CAACD,CAAC,CAACE,QAA3B,EAAqC;AACnCF,QAAAA,CAAC,CAACG,cAAF;AACA,aAAKC,eAAL;AACD;AACF,KATI;AAULA,IAAAA,eAVK,6BAUc;AACjB,UAAI,KAAKZ,IAAT,EAAe;AACb,YAAI,KAAKa,IAAL,CAAU,KAAKb,IAAf,CAAJ,EAA0B;AACxB,eAAKM,WAAL,CAAiB,KAAKN,IAAtB;AACA,eAAKA,IAAL,GAAY,EAAZ;AACD;AACF;AACF;AAjBI,IAXM;AA+Bbc,EAAAA,OA/Ba,qBA+BF;AACT,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBF,MAAhC;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmBF,MAAM,GAAG,CAA5B,EAA+BG,cAA/B,CAA8C,KAA9C;AACD;AAlCY,CAAf","sourcesContent":["import { mapActions, mapState } from 'vuex'\n\nexport default {\n  data () {\n    return {\n      text: ''\n    }\n  },\n  computed: {\n    ...mapState({\n      messages: state => state.messages.list\n    })\n  },\n  methods: {\n    ...mapActions({\n      sendMessage: 'messages/send'\n    }),\n    noEnter (e) {\n      if (e.keyCode === 13 && !e.shiftKey) {\n        e.preventDefault()\n        this.handleSendClick()\n      }\n    },\n    handleSendClick () {\n      if (this.text) {\n        if (/\\S/.test(this.text)) {\n          this.sendMessage(this.text)\n          this.text = ''\n        }\n      }\n    }\n\n  },\n  updated () {\n    let length = this.$refs.element.length\n    this.$refs.element[length - 1].scrollIntoView(false)\n  }\n}\n"]}]}