{"remainingRequest":"/home/max/chat.web/node_modules/babel-loader/lib/index.js!/home/max/chat.web/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/max/chat.web/src/store/modules/lib/messages.js","dependencies":[{"path":"/home/max/chat.web/src/store/modules/lib/messages.js","mtime":1574260770819},{"path":"/home/max/chat.web/node_modules/cache-loader/dist/cjs.js","mtime":1574256557022},{"path":"/home/max/chat.web/node_modules/babel-loader/lib/index.js","mtime":1574256514257},{"path":"/home/max/chat.web/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1573720234857}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/max/chat.web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/max/chat.web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/max/chat.web/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport uniqid from 'uniqid';\nimport { MessageModel } from 'src/models';\nexport var ADD_MESSAGE = 'messages/add';\nexport default (function () {\n  return {\n    namespaced: true,\n    state: {\n      list: [new MessageModel({\n        id: '1',\n        from: 'Noname',\n        text: 'Hey! How\\'s it going?',\n        timestamp: new Date('2019-09-30 19:58:33')\n      })]\n    },\n    mutations: _defineProperty({}, ADD_MESSAGE, function (state, message) {\n      state.list = [].concat(_toConsumableArray(state.list), [new MessageModel(message)]);\n    }),\n    actions: {\n      send: function () {\n        var _send = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(_ref, text) {\n          var commit;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  commit = _ref.commit;\n                  commit(ADD_MESSAGE, {\n                    id: uniqid(),\n                    from: 'Me',\n                    timestamp: new Date(),\n                    text: text\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function send(_x, _x2) {\n          return _send.apply(this, arguments);\n        }\n\n        return send;\n      }()\n    }\n  };\n});",{"version":3,"sources":["/home/max/chat.web/src/store/modules/lib/messages.js"],"names":["uniqid","MessageModel","ADD_MESSAGE","namespaced","state","list","id","from","text","timestamp","Date","mutations","message","actions","send","commit"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAO,IAAMC,WAAW,GAAG,cAApB;AAEP,gBAAe;AAAA,SAAO;AACpBC,IAAAA,UAAU,EAAE,IADQ;AAEpBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CACJ,IAAIJ,YAAJ,CAAiB;AACfK,QAAAA,EAAE,EAAE,GADW;AAEfC,QAAAA,IAAI,EAAE,QAFS;AAGfC,QAAAA,IAAI,EAAE,uBAHS;AAIfC,QAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,qBAAT;AAJI,OAAjB,CADI;AADD,KAFa;AAYpBC,IAAAA,SAAS,sBACNT,WADM,YACQE,KADR,EACeQ,OADf,EACwB;AAC7BR,MAAAA,KAAK,CAACC,IAAN,gCAAiBD,KAAK,CAACC,IAAvB,IAA6B,IAAIJ,YAAJ,CAAiBW,OAAjB,CAA7B;AACD,KAHM,CAZW;AAiBpBC,IAAAA,OAAO,EAAE;AACDC,MAAAA,IADC;AAAA;AAAA;AAAA,uDACiBN,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACOO,kBAAAA,MADP,QACOA,MADP;AAELA,kBAAAA,MAAM,CAACb,WAAD,EAAc;AAClBI,oBAAAA,EAAE,EAAEN,MAAM,EADQ;AAElBO,oBAAAA,IAAI,EAAE,IAFY;AAGlBE,oBAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHO;AAIlBF,oBAAAA,IAAI,EAAJA;AAJkB,mBAAd,CAAN;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjBW,GAAP;AAAA,CAAf","sourcesContent":["import uniqid from 'uniqid'\nimport { MessageModel } from 'src/models'\n\nexport const ADD_MESSAGE = 'messages/add'\n\nexport default () => ({\n  namespaced: true,\n  state: {\n    list: [\n      new MessageModel({\n        id: '1',\n        from: 'Noname',\n        text: 'Hey! How\\'s it going?',\n        timestamp: new Date('2019-09-30 19:58:33')\n      })\n    ]\n  },\n  mutations: {\n    [ADD_MESSAGE] (state, message) {\n      state.list = [...state.list, new MessageModel(message)]\n    }\n  },\n  actions: {\n    async send ({ commit }, text) {\n      commit(ADD_MESSAGE, {\n        id: uniqid(),\n        from: 'Me',\n        timestamp: new Date(),\n        text\n      })\n    }\n  }\n})\n"]}]}