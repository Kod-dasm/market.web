{"remainingRequest":"/home/max/chat.web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/max/chat.web/src/components/lib/RegisterComponent/RegisterComponent.htm?vue&type=template&id=4770063b&","dependencies":[{"path":"/home/max/chat.web/src/components/lib/RegisterComponent/RegisterComponent.htm","mtime":1574595859681},{"path":"/home/max/chat.web/node_modules/cache-loader/dist/cjs.js","mtime":1574256557022},{"path":"/home/max/chat.web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1574256559700}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"root-register-component\" }, [\n    _c(\n      \"form\",\n      { staticClass: \"register-form\" },\n      [\n        _c(\"b\", [_vm._v(\"Create New Account\")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.obj.UserName,\n              expression: \"obj.UserName\"\n            }\n          ],\n          staticClass: \"field\",\n          attrs: { type: \"email\", placeholder: \"User Name\" },\n          domProps: { value: _vm.obj.UserName },\n          on: {\n            keydown: _vm.Enter,\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.obj, \"UserName\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.obj.Email,\n              expression: \"obj.Email\"\n            }\n          ],\n          staticClass: \"field\",\n          attrs: { type: \"email\", placeholder: \"E-mail\" },\n          domProps: { value: _vm.obj.Email },\n          on: {\n            keydown: _vm.Enter,\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.obj, \"Email\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.obj.Password,\n              expression: \"obj.Password\"\n            }\n          ],\n          staticClass: \"field\",\n          attrs: { type: \"password\", placeholder: \"Password\" },\n          domProps: { value: _vm.obj.Password },\n          on: {\n            keydown: _vm.Enter,\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.obj, \"Password\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.obj.ConfirmPassword,\n              expression: \"obj.ConfirmPassword\"\n            }\n          ],\n          staticClass: \"field\",\n          attrs: { type: \"password\", placeholder: \"Confirm Password\" },\n          domProps: { value: _vm.obj.ConfirmPassword },\n          on: {\n            keydown: _vm.Enter,\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.obj, \"ConfirmPassword\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"button-account\", {\n          attrs: { bool: _vm.emptyInput, label: \"Register\" },\n          on: { login: _vm.login }\n        })\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}